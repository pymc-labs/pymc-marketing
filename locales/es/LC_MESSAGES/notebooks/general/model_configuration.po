# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/notebooks/general/model_configuration.ipynb:10003
#: 93a66a7fcd544f62b74afc10389741da
msgid "Model Configuration"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:10005
#: 7fd06aa25e6241b2bdc3452d19f3a3d1
msgid ""
"This notebook provides details about the model configuration in PyMC-"
"Marketing. This API provides a very flexible way to express the model "
"Priors and likelihoods so that we can have enough expressiveness to build"
" custom models."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:20002
#: 820dc3baa3224c4faa3c56970ad9a58e
msgid "Setup"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:50002
#: 0953b65ade804649a856937f49538b10
msgid "Prior Distributions"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:50004
#: 7fb8ab63c8ce4bf0a707bdaa7a31066c
#, python-brace-format
msgid ""
"The {class}`~pymc_extras.prior.Prior` class is our way to expression "
"distributions and relationships between them."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:50006
#: e0c98f54cfdc41219ad878d4cc582c20
msgid "Basic Usage"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:50008
#: 9b9e4920c00446fa879c5702da45c1a5
msgid ""
"Every prior will need a distribution name that comes from `PyMC`. View "
"the full list in the documentation "
"[here](https://www.pymc.io/projects/docs/en/stable/api/distributions.html)."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:70002
#: f57508d6fed9461a9d87428954541834
msgid "If not, then an exception will be raised."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:90002
#: b4c27d24969a479bb02d822e39e68cdc
msgid ""
"Specific parameters can be passed as **keyword arguments** but are not "
"required if the `PyMC` distribution has defaults."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:110002
#: 77ebe9be4dab4e1999a32026f7ff7618
msgid "There will be a check at initialization against the `PyMC` distribution."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:130002
#: 3bbe0796c279440d99bf00927962551c
msgid ""
"However, there are some limitations to that. Take this invalid "
"parameterization below:"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:150002
#: fad2a7ba20f5469182135455e963c6c7
msgid ""
"The `create_variable` method is used to make variables from this "
"distribution and it isn't until then that there is an error."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:170002
#: 47ead6dcfc114c9296ab0c0322f4f22a
msgid "This goes for incorrect values as well!"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:190002
#: 07cee572fb974a399e4fe77d964c2774
msgid ""
"The `dims` parameter are used to express the dimensions of the "
"distribution. This variable is not part of a model so the values are not "
"reflected with the distribution itself."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:210002
#: 9b080d7aa12c4759beeb8e892c18af5e
msgid ""
"If there are dimensions, then the coords need to exist in the larger "
"model. But they exist separately and can defined in advance."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:210005
#: 60e75a3a13cd435eaab2a04728613617
msgid ""
"Each `Prior` instance is just instructions to create a variable, so they "
"can be used multiple times!"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:230002
#: 9454ec3b592b4a1ba1b6b13b5f3c814e
msgid "If the coords were not specified then this would cause a PyMC error."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:250002
#: b4f466cc7d3b4060bd93a3197b70af3f
msgid ""
"The variables can get arbitrarily large as well by providing additional "
"dims in a tuple."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:280002
#: fc4c7fa8ecdd4af3b17a65468e445f7b
msgid "Hierarchical Variables"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:280004
#: e6db2c0a14cb44bc8a999185ad6d0a8a
msgid ""
"Hierarchical variables can be defined by using distributions as the "
"parameters of another distribution. The parent distributions will usually"
" have a larger dimensionality than each of the parameters."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:300002
#: cc751740856d43729a4949ae65e6d8c2
msgid ""
"We can use the `to_graph` method to create visualize the variable with "
"dummy coordinates."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:300005
#: c41b1294d20e4f38b1c34a482de48d63
msgid ""
"No need to worry about variable naming! The child parameters will all be "
"automatically named based on the parent."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:320003
#: a3801b8bc21c4979b0cc16a25276f854
msgid "The validity of the parameter values will not be checked."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:320006
#: 95cece05419a4ea4bb4435d137d5103d
msgid ""
"There can be negative sigma parameter in a Normal distribution whether "
"that comes from value or another distribution!"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:350003
#: 40816e8a3de24e6ca3cd3a2e86c1061e
msgid ""
"Model reparamterizations can help with model convergence depending on the"
" model posterior!"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:350006
#: 462009535f0e42faa69b97191e75745c
msgid ""
"For Normal distribution, the common non-centered parameterization is "
"supported with the `centered` flag."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:370002
#: d43347ee87de4804855b5d6b0b24c437
msgid ""
"Other distributions can be hierarchical as well. Just use distributions "
"for parameters of a parent distribution. For instance, the Beta "
"distribution has two positive parameters, `alpha` and `beta` which can be"
" reflect as HalfNormal distributions."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:390002
#: 150fad3c055f4cd286316340f611868d
msgid "Transformations"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:390004
#: a6faa2423aa74370809b34641624d7dd
msgid ""
"The `transform` variable can be used for any of the distributions to "
"change its domain."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:390006
#: 432c38a5bfb942d0a8ffce365a1c736c
msgid ""
"These transformations will be taken from `pytensor.tensor` or `pm.math` "
"in that order."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:390008
#: 111560e9d2044eb79116ac995334e431
msgid ""
"Below is a non-centered hierarchical Normal distribution that is put "
"through a sigmoid function in order to change the domain to (0, 1)."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:410002
#: bb67df5cede349ae9218cfb610397d59
msgid "Prior Visualization"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:410004
#: 86b469bcaf554119a88816ab0935e1ec
msgid ""
"For scalar distributions, make use of the `preliz` attribute of the model"
" in order to visualize."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:410007
#: f070abe498e045a2bd813e87aef668d7
msgid ""
"Defaults for the parameters will have to be provided or there will be an "
"error."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:430003
#: b6ff3770ae4a4ebca1fb847ba6acff9f
msgid ""
"Using the `constrain` method can help hone in on a prior. It is a wrapper"
" around [PreliZ's `maxent` "
"function](https://preliz.readthedocs.io/en/latest/api_reference.html#preliz.unidimensional.maxent)."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:450002
#: 1149081311484ee4bdf40b1ea7060690
msgid ""
"To keep a parameter value fixed, pass it to the Prior instance. In the "
"following example, the mean is fixed at 2."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:470002
#: 7c8c989ab8fb4c2c90e701a716da43e4
msgid ""
"For more complicated distributions, consider using the `sample_prior` "
"method in order to access the prior. Or PreliZ's functions like "
"[predictive "
"explorer](https://preliz.readthedocs.io/en/latest/examples/observed_space_examples.html"
"#predictive-explorer)."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:470006
#: 3d6054314b2c442cabc99bb6c86df880
msgid "Any coordinates will have to be passed like in `pm.Model`."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:490002
#: 05578f49106946c692dafbc6736e6708
msgid ""
"The prior variables can be visualized in whatever way works best. Here is"
" a KDE of the variables to see the marginal distributions."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:510002
#: 6efe0bf20f9a4a349376760e290877fc
msgid ""
"Use any workflow to make sense of the prior distribution! For instance, "
"the joint distribution which shows these two channels are correlated due "
"to the hierarchical generation."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:530002
#: bedd0571bfa54d8f93d9b6d35366b3f8
msgid "Automatic Broadcasting"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:530004
#: e8008da26da647a3af9722c0db25d35d
msgid "The broadcasting of the dims will be handled automatically."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:530006
#: a37c24653e404acfb8e95b46ce523a24
msgid ""
"For instance, the `mu` of the variable needs to be transposed in order to"
" work with `(\"channel\", \"geo\")` dims."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:530008
#: 029dee1aed1f46568f835a98f30b499b
msgid ""
"With all this functionality, we can see that the prior distributions can "
"become quite expressive!"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:550002
#: 4f9c2db807ef4588a6ab1f87ebe1720f
msgid ""
"And the user can spend more time thinking about just the assumptions of "
"the variables rather than logic to ensure the dimensions work."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:570002
#: 6fe353c2e7ac4a9b82ab206fe139ddf1
msgid "Serialization"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:570004
#: 6340a8dabd324675b00633d81fd36d0d
msgid ""
"The `to_dict` and `from_dict` methods can be helpful for storage of the "
"distributions."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:600002
#: d9a2c94f10f04dd2943254ed0ca79ecd
msgid "Use in PyMC-Marketing"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:600004
#: 0189b7788c6a43f983e5aed4a6ffbbad
msgid ""
"Distributions will be expressed in this manner throughout the package "
"including but not limited to:"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:600006
#: 0ae24fcf2e264e508c6b452ec762d5c6
msgid "MMM components"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:600007
#: 69370d1b22724d75934497feebefaebe
msgid ""
"[media transformations](https://www.pymc-"
"marketing.io/en/stable/notebooks/mmm/mmm_components.html#media-"
"transformations)"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:600009
#: 6fd85db8804f49749dabf9890bd4cf66
msgid "Backwards compatibility"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:600011
#: b463cf0047364ae3970800e682ea07be
msgid ""
"The `from_dict` method will create a `Prior` instance from the previous "
"format."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:600013
#: ed5c6ca7f3ad44edb5db8e67651d3dd0
msgid "For instance, take this previous configuration:"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:620002
#: 0f17705ffb934d2f9571f55d6218b0f9
msgid ""
"This can be parsed with the `Prior.from_dict` constructor for each key. "
"Much more consise too!"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:650002
#: 366c5b41ed254655a3b3be3ee66ca0f7
msgid ""
"The `parse_model_config` function will do just this and is used "
"internally. It also provides some deprecation warnings."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:670002
#: 58a8f7602cd943589fcb1085b8c048d6
msgid "As well as the ability to catch some errors while parsing."
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:690002
#: 0957ae1567a34d069372044a2046e38d
msgid "Appendix: Validation"
msgstr ""

#: ../source/notebooks/general/model_configuration.ipynb:690004
#: 2b6c12c3aec543109b8ed4ccf6a26066
msgid ""
"Behind the scenes, the `Prior` class uses th `validate_call` from "
"[`Pydantic`](https://docs.pydantic.dev/latest/concepts/validators/) to "
"ensure that the parameters are valid.`"
msgstr ""
