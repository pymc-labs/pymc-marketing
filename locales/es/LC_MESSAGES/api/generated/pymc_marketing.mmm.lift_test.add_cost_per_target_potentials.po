# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/pymc_marketing.mmm.lift_test.add_cost_per_target_potentials.rst:2
#: 854bb944396e4ad3ad32d01bdc483b93
msgid "add\\_cost\\_per\\_target\\_potentials"
msgstr ""

#: 5c1e32a248e444d1b4b96a9dd2c2c985 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:2
msgid "Add ``pm.Potential`` penalties to calibrate cost-per-target."
msgstr ""

#: 7c30271ad2a14002bd5f0d86799c559c of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:4
msgid ""
"For each row, we compute the mean of ``cpt_variable_name`` across the "
"date dimension for the specified (dims, channel) slice and add a soft "
"quadratic penalty:"
msgstr ""

#: f276e7482ed34d93a29c13c10b415fbb of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:8
msgid "``penalty = - |cpt_mean - target|^2 / (2 * sigma^2)``."
msgstr ""

#: 0878128afea141bb8f6e12cfc250a768 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials
msgid "Parameters"
msgstr ""

#: d255dcd0b1be4735969017f2e4dcc529 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:12
msgid "**calibration_df** : :obj:`pd.DataFrame`"
msgstr ""

#: 7ee0eb022edf4aa4a0faa49b53d1d12d of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:11
msgid "pd.DataFrame"
msgstr ""

#: 2a5c6f310bf44eacbe8c1fd458ff4c5f of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:13
msgid ""
"Must include columns ``channel``, ``sigma``, and a target column. By "
"default the target column is assumed to be ``cost_per_target``; if a "
"column matching ``cpt_variable_name`` is present it will be used instead."
" The DataFrame must also include one column per model dimension found in "
"the CPT variable (excluding ``date``)."
msgstr ""

#: 06860942a1634f089cd543ef5a4bf8b6 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:19
msgid "**model** : :obj:`pm.Model`, optional"
msgstr ""

#: 9455611bb6ae4670822aead56a8a1e82 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:18
msgid "pm.Model, optional"
msgstr ""

#: a9df3c98aa4e4683a7f9f86e6cb29087 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:20
msgid ""
"Model containing the ``cpt_variable_name`` Deterministic with dims "
"(\"date\", *dims, \"channel\"). If None, uses the current model context."
msgstr ""

#: 348937b1f4ec43409d63b284b9273772 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:23
msgid "**cpt_variable_name** : :class:`python:str`"
msgstr ""

#: 51628732927a42e5aab5f6b4a4c38285 7372db5eee184d1ebb08aa9f78ef160d of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:22
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:25
msgid "python:str"
msgstr ""

#: fdcab45ee5c14ea1ac0d73dbede82fc7 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:24
msgid "Name of the cost-per-target Deterministic variable."
msgstr ""

#: 1cf841777b6c456d8fcc25aa93d5910c of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:26
msgid "**name_prefix** : :class:`python:str`"
msgstr ""

#: 7bd189476028498f8cc080babf0c06e4 of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:27
msgid "Prefix for created potential names."
msgstr ""

#: 535d710a649a48aa96e05ba0b425a5de of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:29
msgid ""
"**get_indices** : :obj:`Callable`\\[[:obj:`pd.DataFrame`, "
":obj:`pm.Model`], :obj:`Indices`]"
msgstr ""

#: 4f74f876d45c4259bc0c5a7c3ad8cc7e of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:28
msgid "Callable[[pd.DataFrame, pm.Model], Indices]"
msgstr ""

#: 806df57c27cd425b953b2fceed57fc7e of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:30
msgid "Alignment function mapping rows to model coordinate indices."
msgstr ""

#: 9016df489f3a42bd8bea0281d59c556d of
#: pymc_marketing.mmm.lift_test.add_cost_per_target_potentials:45
msgid "Examples"
msgstr ""
