# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 11:28+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.hsgp_kwargs.HSGPKwargs.model_dump_json.rst:2
#: ad50a7c6e13f4506a1ea2c68721145af
msgid "HSGPKwargs.model\\_dump\\_json"
msgstr ""

#: 961006978f204c21a06130582e9af97f of
#: pydantic.main.BaseModel.model_dump_json:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 4a768c6417b649eda77e9912676e9c10 of
#: pydantic.main.BaseModel.model_dump_json:3
msgid "[`model_dump_json`](../concepts/serialization.md#json-mode)"
msgstr ""

#: 521c7dde323949148dad4b881e0d5ab8 of
#: pydantic.main.BaseModel.model_dump_json:5
msgid ""
"Generates a JSON representation of the model using Pydantic's `to_json` "
"method."
msgstr ""

#: d78a103546e748d395d93ed8ae51ded8 of
#: pydantic.main.BaseModel.model_dump_json:7
msgid "Args:"
msgstr ""

#: 0aa86d2cf4ad46a894239afa04172415 of
#: pydantic.main.BaseModel.model_dump_json:8
msgid ""
"indent: Indentation to use in the JSON output. If None is passed, the "
"output will be compact. ensure_ascii: If `True`, the output is guaranteed"
" to have all incoming non-ASCII characters escaped."
msgstr ""

#: f3d595ef47b247359513a3a12ffb3da0 of
#: pydantic.main.BaseModel.model_dump_json:10
msgid "If `False` (the default), these characters will be output as-is."
msgstr ""

#: 48db4a6cbafc432881fd2acb4fb9de3e of
#: pydantic.main.BaseModel.model_dump_json:11
msgid ""
"include: Field(s) to include in the JSON output. exclude: Field(s) to "
"exclude from the JSON output. context: Additional context to pass to the "
"serializer. by_alias: Whether to serialize using field aliases. "
"exclude_unset: Whether to exclude fields that have not been explicitly "
"set. exclude_defaults: Whether to exclude fields that are set to their "
"default value. exclude_none: Whether to exclude fields that have a value "
"of `None`. exclude_computed_fields: Whether to exclude computed fields."
msgstr ""

#: f5113bfbcc224e0cbfa411014b84ac9e of
#: pydantic.main.BaseModel.model_dump_json:19
msgid ""
"While this can be useful for round-tripping, it is usually recommended to"
" use the dedicated `round_trip` parameter instead."
msgstr ""

#: a7749b018af04a71a5f3dadba9c135e3 of
#: pydantic.main.BaseModel.model_dump_json:21
msgid ""
"round_trip: If True, dumped values should be valid as input for non-"
"idempotent types such as Json[T]. warnings: How to handle serialization "
"errors. False/\"none\" ignores them, True/\"warn\" logs errors,"
msgstr ""

#: 156493dbf44e41a3a03fb93e12c6ef78 of
#: pydantic.main.BaseModel.model_dump_json:23
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: 677252ddb06444cbb37c9f2a85d56987 of
#: pydantic.main.BaseModel.model_dump_json:24
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: fb948d9ee45640ce9abfd423f30ab229 of
#: pydantic.main.BaseModel.model_dump_json:25
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: af0569cef03a44f0be9dec1c7894476d of
#: pydantic.main.BaseModel.model_dump_json:26
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: 68f73750b79a4e52ab2316097a166d04 of
#: pydantic.main.BaseModel.model_dump_json:28
msgid "Returns:"
msgstr ""

#: 0cb01dc06c674ed5b027921a40b977ca of
#: pydantic.main.BaseModel.model_dump_json:29
msgid "A JSON string representation of the model."
msgstr ""

#~ msgid "[`model_dump_json`](../concepts/serialization.md#modelmodel_dump_json)"
#~ msgstr ""

#~ msgid ""
#~ "indent: Indentation to use in the "
#~ "JSON output. If None is passed, "
#~ "the output will be compact. include: "
#~ "Field(s) to include in the JSON "
#~ "output. exclude: Field(s) to exclude "
#~ "from the JSON output. context: "
#~ "Additional context to pass to the "
#~ "serializer. by_alias: Whether to serialize "
#~ "using field aliases. exclude_unset: Whether"
#~ " to exclude fields that have not "
#~ "been explicitly set. exclude_defaults: Whether"
#~ " to exclude fields that are set "
#~ "to their default value. exclude_none: "
#~ "Whether to exclude fields that have "
#~ "a value of `None`. round_trip: If "
#~ "True, dumped values should be valid "
#~ "as input for non-idempotent types "
#~ "such as Json[T]. warnings: How to "
#~ "handle serialization errors. False/\"none\" "
#~ "ignores them, True/\"warn\" logs errors,"
#~ msgstr ""
