# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.customer_choice.mv_its.MVITS.approximate_fit.rst:2
#: 6843a635973c4fc093bb95ae7422b9c6
msgid "MVITS.approximate\\_fit"
msgstr ""

#: 04b8d527cda24858b9eccab3e9f47707 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:2
msgid "Fit a model using Variational Inference and return InferenceData."
msgstr ""

#: 8e7b520c8c434a90bbdcc0cfc610091f of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:4
msgid ""
"This performs variational inference via `pymc.fit`, then draws posterior "
"samples from the fitted approximation via `Approximation.sample`, "
"returning an `arviz.InferenceData` compatible with the rest of the API "
"(same structure as `.fit`)."
msgstr ""

#: 3a7cd1241bf14736ad302fd54889d131 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit
msgid "Parameters"
msgstr ""

#: 983d5440c49c416cb2b68d85f651f10b of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:10
msgid ""
"**X** : :term:`numpy:array_like` | :obj:`array <numpy.ndarray>`, "
":obj:`shape` (:obj:`n_obs`, :obj:`n_features`)"
msgstr ""

#: 58bf2c436ee947ca8fb0ea21b90419ba of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:9
msgid "numpy:array_like | array, shape (n_obs, n_features)"
msgstr ""

#: 015a4e63873642bfba9966be60cc339b of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:11
msgid ""
"The training input samples. If scikit-learn is available, array-like, "
"otherwise array."
msgstr ""

#: ae6870eb355240098ea982c0e83aa519 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:13
msgid ""
"**y** : :term:`numpy:array_like` | :obj:`array <numpy.ndarray>`, "
":obj:`shape` (n_obs,)"
msgstr ""

#: 90fa7283f7e0433cbac3e923d0451294 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:12
msgid "numpy:array_like | array, shape (n_obs,)"
msgstr ""

#: cca65c7d634447bb979f9ee617d9580c of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:14
msgid ""
"The target values (real numbers). If scikit-learn is available, array-"
"like, otherwise array."
msgstr ""

#: e727919dac954128987e5b57f7b60342 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:16
msgid "**progressbar** : :ref:`bool <python:bltin-boolean-values>`, optional"
msgstr ""

#: c77df59ecf2d4e56a12d095de1107bcd of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:15
msgid "bool, optional"
msgstr ""

#: 3be97e0dda5147fcb1a7556a465ccfef of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:17
msgid ""
"Specifies whether the fitting/sample progress bar should be displayed. "
"Defaults to True."
msgstr ""

#: 2ab88a6a59f94ea982b4640eae92673c of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:19
msgid ""
"**random_seed** : :obj:`Optional`\\[:obj:`RandomState "
"<numpy.random.RandomState>`]"
msgstr ""

#: 254c9612aa27490d90ed2c7f9211773c of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:18
msgid "Optional[RandomState]"
msgstr ""

#: bb1523e8f53c41119118ec41cf7a08b4 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:20
msgid ""
"Provides stochastic procedures with initial random seed for "
"reproducibility."
msgstr ""

#: 93d46767c4924fa4ad12b23da7a3cc08 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:22
msgid "**fit_kwargs** : :class:`python:dict`, optional"
msgstr ""

#: 05d65d51ad18480e9ee4fd1522a78e7c fb6bedcca53648e4a694478c30e68310 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:21
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:24
msgid "python:dict, optional"
msgstr ""

#: e527cfe302b04148ad5f79afcf28bc12 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:23
#, python-brace-format
msgid ""
"Extra keyword arguments forwarded to `pymc.fit` (e.g., {\"n\": 10_000, "
"\"method\": \"advi\"})."
msgstr ""

#: e6c7ac35436945b78b92077c280f71c8 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:25
msgid "**sample_kwargs** : :class:`python:dict`, optional"
msgstr ""

#: 2441420a1ec241e3a04eff008e71dba1 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:26
#, python-brace-format
msgid ""
"Extra keyword arguments forwarded to `Approximation.sample` (e.g., "
"{\"draws\": 1_000})."
msgstr ""

#: 6b6e91b271a6435598c9043509faaf9e of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit
msgid "Returns"
msgstr ""

#: 8dd0049ee4bd44c6baf22f6909f6ec22 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:32
msgid ":obj:`az.InferenceData`"
msgstr ""

#: 458c30c2c8514b878a1d977c6b17eb98 of
#: pymc_marketing.model_builder.RegressionModelBuilder.approximate_fit:33
msgid "Inference data of the variationally fitted model."
msgstr ""
