# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-21 09:54+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: es <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.budget_optimizer.CustomModelWrapper.model_dump.rst:2
#: f68e05411f58499197c42c981d0368bb
msgid "CustomModelWrapper.model\\_dump"
msgstr ""
"{\n"
"  \"singular\": \"CustomModelWrapper.model_dump\",\n"
"  \"plural\": \"CustomModelWrapper.model_dump\"\n"
"}"

#: 09a76f43660d420f93496f5afa9f9944 of pydantic.main.BaseModel.model_dump:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""
"{\n"
"  \"singular\": \"!!! abstract \\\"Documentación de Uso\\\"\",\n"
"  \"plural\": \"!!! abstract \\\"Documentación de Uso\\\"\"\n"
"}"

#: 9452c43bad364e1f97b3bc5d545263e4 of pydantic.main.BaseModel.model_dump:3
msgid "[`model_dump`](../concepts/serialization.md#python-mode)"
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"`model_dump`\",\n"
"    \"msgstr\": \"`model_dump`\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"`model_dump`\",\n"
"    \"msgstr\": \"`model_dump`\"\n"
"  }\n"
"}"

#: 53ae6498dc27434e850c521436e64280 of pydantic.main.BaseModel.model_dump:5
msgid ""
"Generate a dictionary representation of the model, optionally specifying "
"which fields to include or exclude."
msgstr ""
"{\n"
"  \"singular\": \"Genera una representación de diccionario del modelo, especificando opcionalmente qué campos incluir o excluir.\",\n"
"  \"plural\": \"Generen una representación de diccionario del modelo, especificando opcionalmente qué campos incluir o excluir.\"\n"
"}"

#: 7fcea0d6ea994d12ba2714709ccb5181 of pydantic.main.BaseModel.model_dump:7
msgid "Args:"
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"Args:\",\n"
"    \"msgstr\": \"Args:\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"Args:\",\n"
"    \"msgstr\": \"Args:\"\n"
"  }\n"
"}"

#: b5b75764bbde4d04a9d49c2653e99028 of pydantic.main.BaseModel.model_dump:8
msgid "mode: The mode in which `to_python` should run."
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"mode: The mode in which `to_python` should run.\",\n"
"    \"msgstr\": \"modo: El modo en el que `to_python` debería ejecutarse.\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"mode: The mode in which `to_python` should run.\",\n"
"    \"msgstr\": \"modo: El modo en el que `to_python` debería ejecutarse.\"\n"
"  }\n"
"}"

#: 0a3706bd7b7b4e91895b64aece99dce7 of pydantic.main.BaseModel.model_dump:9
msgid ""
"If mode is 'json', the output will only contain JSON serializable types. If "
"mode is 'python', the output may contain non-JSON-serializable Python "
"objects."
msgstr ""
"{\n"
"  \"singular\": \"Si el modo es 'json', la salida solo contendrá tipos serializables en JSON. Si el modo es 'python', la salida puede contener objetos de Python no serializables en JSON.\",\n"
"  \"plural\": \"Si los modos son 'json', las salidas solo contendrán tipos serializables en JSON. Si los modos son 'python', las salidas pueden contener objetos de Python no serializables en JSON.\"\n"
"}"

#: d384bdf74ddb43a4963d092da9674eda of pydantic.main.BaseModel.model_dump:11
msgid ""
"include: A set of fields to include in the output. exclude: A set of fields "
"to exclude from the output. context: Additional context to pass to the "
"serializer. by_alias: Whether to use the field's alias in the dictionary key"
" if defined. exclude_unset: Whether to exclude fields that have not been "
"explicitly set. exclude_defaults: Whether to exclude fields that are set to "
"their default value. exclude_none: Whether to exclude fields that have a "
"value of `None`. exclude_computed_fields: Whether to exclude computed "
"fields."
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"include: A set of fields to include in the output.\",\n"
"    \"msgstr\": \"include: Un conjunto de campos a incluir en la salida.\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"exclude: A set of fields to exclude from the output.\",\n"
"    \"msgstr\": \"exclude: Un conjunto de campos a excluir de la salida.\"\n"
"  },\n"
"  \"context\": {\n"
"    \"msgid\": \"context: Additional context to pass to the serializer.\",\n"
"    \"msgstr\": \"context: Contexto adicional para pasar al serializador.\"\n"
"  },\n"
"  \"by_alias\": {\n"
"    \"msgid\": \"by_alias: Whether to use the field's alias in the dictionary key if defined.\",\n"
"    \"msgstr\": \"by_alias: Si se debe usar el alias del campo en la clave del diccionario si está definido.\"\n"
"  },\n"
"  \"exclude_unset\": {\n"
"    \"msgid\": \"exclude_unset: Whether to exclude fields that have not been explicitly set.\",\n"
"    \"msgstr\": \"exclude_unset: Si se deben excluir los campos que no han sido establecidos explícitamente.\"\n"
"  },\n"
"  \"exclude_defaults\": {\n"
"    \"msgid\": \"exclude_defaults: Whether to exclude fields that are set to their default value.\",\n"
"    \"msgstr\": \"exclude_defaults: Si se deben excluir los campos que están establecidos en su valor predeterminado.\"\n"
"  },\n"
"  \"exclude_none\": {\n"
"    \"msgid\": \"exclude_none: Whether to exclude fields that have a value of `None`.\",\n"
"    \"msgstr\": \"exclude_none: Si se deben excluir los campos que tienen un valor de `None`.\"\n"
"  },\n"
"  \"exclude_computed_fields\": {\n"
"    \"msgid\": \"exclude_computed_fields: Whether to exclude computed fields.\",\n"
"    \"msgstr\": \"exclude_computed_fields: Si se deben excluir los campos computados.\"\n"
"  }\n"
"}"

#: 3602f10df3424ce8821dd6d1fc8d428e of pydantic.main.BaseModel.model_dump:19
msgid ""
"While this can be useful for round-tripping, it is usually recommended tu "
"use the dedicated `round_trip` parameter instead."
msgstr ""
"{\n"
"  \"singular\": \"Si bien esto puede ser útil para el intercambio de ida y vuelta, generalmente se recomienda utilizar el parámetro dedicado `round_trip` en su lugar.\",\n"
"  \"plural\": \"Si bien esto puede ser útil para el intercambio de ida y vuelta, generalmente se recomienda utilizar el parámetro dedicado `round_trip` en su lugar.\"\n"
"}"

#: 8f496391925b41f8aad98c06c094f9e9 of pydantic.main.BaseModel.model_dump:21
msgid ""
"round_trip: If True, dumped values should be valid as input for non-"
"idempotent types such as Json[T]. warnings: How to handle serialization "
"errors. False/\"none\" ignores them, True/\"warn\" logs errors,"
msgstr ""
"{\n"
"  \"singular\": \"round_trip: Si es verdadero, los valores volcado deben ser válidos como entrada para tipos no idempotentes como Json[T]. advertencias: Cómo manejar errores de serialización. Falso/\\\"ninguno\\\" los ignora, Verdadero/\\\"advertir\\\" registra errores,\",\n"
"  \"plural\": \"round_trip: Si son verdaderos, los valores volcado deben ser válidos como entrada para tipos no idempotentes como Json[T]. advertencias: Cómo manejar errores de serialización. Falsos/\\\"ninguno\\\" los ignoran, Verdaderos/\\\"advertir\\\" registran errores,\"\n"
"}"

#: 436abf13d1e64f8f93754230dbc29f79 of pydantic.main.BaseModel.model_dump:23
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""
"{\n"
"  \"singular\": \"El \\\"error\\\" genera un [`PydanticSerializationError`][pydantic_core.PydanticSerializationError].\",\n"
"  \"plural\": \"Los \\\"errores\\\" generan un [`PydanticSerializationError`][pydantic_core.PydanticSerializationError].\"\n"
"}"

#: 93ad04cf7f6442a1a12ef331127312bf of pydantic.main.BaseModel.model_dump:24
msgid ""
"fallback: A function to call when an unknown value is encountered. If not "
"provided,"
msgstr ""
"{\n"
"  \"singular\": \"fallback: Una función a llamar cuando se encuentra un valor desconocido. Si no se proporciona,\",\n"
"  \"plural\": \"fallback: Una función a llamar cuando se encuentran valores desconocidos. Si no se proporcionan,\"\n"
"}"

#: 72c9c12fdf224b29ad156c31b0c96dee of pydantic.main.BaseModel.model_dump:25
msgid ""
"a [`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""
"{\n"
"  \"singular\": \"se genera un error [`PydanticSerializationError`][pydantic_core.PydanticSerializationError].\",\n"
"  \"plural\": \"se generan errores [`PydanticSerializationError`][pydantic_core.PydanticSerializationError].\"\n"
"}"

#: eaf51be5d06b4a3e9962af57d4f0528c of pydantic.main.BaseModel.model_dump:26
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing serialization"
" behavior."
msgstr ""
"{\n"
"  \"singular\": \"serialize_as_any: Si se deben serializar los campos con un comportamiento de serialización de tipo pato.\",\n"
"  \"plural\": \"serialize_as_any: Si se deben serializar los campos con un comportamiento de serialización de tipo pato.\"\n"
"}"

#: feca72245d014579b29e3cadbadf3b6b of pydantic.main.BaseModel.model_dump:28
msgid "Returns:"
msgstr ""
"{\n"
"  \"singular\": \"Devuelve:\",\n"
"  \"plural\": \"Devuelven:\"\n"
"}"

#: acf025fadcda4809876796b00e852f76 of pydantic.main.BaseModel.model_dump:29
msgid "A dictionary representation of the model."
msgstr ""
"{\n"
"  \"singular\": \"Una representación de diccionario del modelo.\",\n"
"  \"plural\": \"Representaciones de diccionario del modelo.\"\n"
"}"
