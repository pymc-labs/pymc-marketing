# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.fourier.MonthlyFourier.model_dump.rst:2
#: b6fd6168ce95480386dfc0054cd75b0e
msgid "MonthlyFourier.model\\_dump"
msgstr ""

#: e64e67dc18354a1baf074f3ac6281c1f of pydantic.main.BaseModel.model_dump:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 1016f3c43078436b90105f75aeb1ec20 of pydantic.main.BaseModel.model_dump:3
msgid "[`model_dump`](../concepts/serialization.md#modelmodel_dump)"
msgstr ""

#: 0c516e3862a84fc1888ce3996f822d93 of pydantic.main.BaseModel.model_dump:5
msgid ""
"Generate a dictionary representation of the model, optionally specifying "
"which fields to include or exclude."
msgstr ""

#: f4aefd547858404b8df095bbe4685998 of pydantic.main.BaseModel.model_dump:7
msgid "Args:"
msgstr ""

#: f31b4b17b1fc4152bfdac3ae15525238 of pydantic.main.BaseModel.model_dump:8
msgid "mode: The mode in which `to_python` should run."
msgstr ""

#: cddf1a3b38e24b398108facfa28dada0 of pydantic.main.BaseModel.model_dump:9
msgid ""
"If mode is 'json', the output will only contain JSON serializable types. "
"If mode is 'python', the output may contain non-JSON-serializable Python "
"objects."
msgstr ""

#: 253bd38ce83142a09afd80de9456ab45 of pydantic.main.BaseModel.model_dump:11
msgid ""
"include: A set of fields to include in the output. exclude: A set of "
"fields to exclude from the output. context: Additional context to pass to"
" the serializer. by_alias: Whether to use the field's alias in the "
"dictionary key if defined. exclude_unset: Whether to exclude fields that "
"have not been explicitly set. exclude_defaults: Whether to exclude fields"
" that are set to their default value. exclude_none: Whether to exclude "
"fields that have a value of `None`. round_trip: If True, dumped values "
"should be valid as input for non-idempotent types such as Json[T]. "
"warnings: How to handle serialization errors. False/\"none\" ignores "
"them, True/\"warn\" logs errors,"
msgstr ""

#: ad69680a003440b497219bd597b7fac2 of pydantic.main.BaseModel.model_dump:20
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: 22135c3bb1d9437880cf08960eb9a88d of pydantic.main.BaseModel.model_dump:21
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: 07e1f1076d0c4d78929fd82be2b8e5dd of pydantic.main.BaseModel.model_dump:22
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: 941589ea619342c1ae99becf198d23c2 of pydantic.main.BaseModel.model_dump:23
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: 43f34112e02c4f59af688fdde41fc80e of pydantic.main.BaseModel.model_dump:25
msgid "Returns:"
msgstr ""

#: 9ff654d08d86424fac6e8bdc00056017 of pydantic.main.BaseModel.model_dump:26
msgid "A dictionary representation of the model."
msgstr ""
