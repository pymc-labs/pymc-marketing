# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.hsgp.HSGP.model_copy.rst:2
#: c5a67c7673fe42c4b3d9162dfcab800c
msgid "HSGP.model\\_copy"
msgstr ""

#: b63d2bc4f01d49969085042eeb929139 of pydantic.main.BaseModel.model_copy:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 6e4fa5ded3fc467ba2a4c62312a96b73 of pydantic.main.BaseModel.model_copy:3
msgid "[`model_copy`](../concepts/serialization.md#model_copy)"
msgstr ""

#: 9a2e2c30feeb46a6b6951ea842237aaf of pydantic.main.BaseModel.model_copy:5
msgid "Returns a copy of the model."
msgstr ""

#: a08ef640a248459f870f5e315d230025 of pydantic.main.BaseModel.model_copy:7
msgid "!!! note"
msgstr ""

#: 2d316bced2784e80b84a7d3372cacc3f of pydantic.main.BaseModel.model_copy:8
msgid ""
"The underlying instance's [`__dict__`][object.__dict__] attribute is "
"copied. This might have unexpected side effects if you store anything in "
"it, on top of the model fields (e.g. the value of [cached "
"properties][functools.cached_property])."
msgstr ""

#: 181255b76e014ebab864e9b831e9aec8 of pydantic.main.BaseModel.model_copy:12
msgid "Args:"
msgstr ""

#: c640086fe1404883bd5adf11655e8928 of pydantic.main.BaseModel.model_copy:13
msgid ""
"update: Values to change/add in the new model. Note: the data is not "
"validated"
msgstr ""

#: ee6fdb5489154b32b5862f90d0cde153 of pydantic.main.BaseModel.model_copy:14
msgid "before creating the new model. You should trust this data."
msgstr ""

#: f3ebfb2e1eb34681b2443657e55b711d of pydantic.main.BaseModel.model_copy:15
msgid "deep: Set to `True` to make a deep copy of the model."
msgstr ""

#: 96bb8b13c6264e5a91f3935b8c236777 of pydantic.main.BaseModel.model_copy:17
msgid "Returns:"
msgstr ""

#: 1edce4d964db4c7cbe40920bd5e250a2 of pydantic.main.BaseModel.model_copy:18
msgid "New model instance."
msgstr ""
