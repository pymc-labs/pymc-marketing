# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.hsgp.SoftPlusHSGP.model_dump_json.rst:2
#: 022dac0f9b2b466ea03936593515b8ce
msgid "SoftPlusHSGP.model\\_dump\\_json"
msgstr ""

#: 19634152cd33491ba65132e64e1af029 of
#: pydantic.main.BaseModel.model_dump_json:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 7a839a256f1745f092a8df5e34aae62b of
#: pydantic.main.BaseModel.model_dump_json:3
msgid "[`model_dump_json`](../concepts/serialization.md#modelmodel_dump_json)"
msgstr ""

#: cd56ee596c674a708c9cc74a9f4fe873 of
#: pydantic.main.BaseModel.model_dump_json:5
msgid ""
"Generates a JSON representation of the model using Pydantic's `to_json` "
"method."
msgstr ""

#: df10289ac8324ae8bbf03a1ef5003a64 of
#: pydantic.main.BaseModel.model_dump_json:7
msgid "Args:"
msgstr ""

#: 430fc7924c16444b98412baa85ce24fc of
#: pydantic.main.BaseModel.model_dump_json:8
msgid ""
"indent: Indentation to use in the JSON output. If None is passed, the "
"output will be compact. include: Field(s) to include in the JSON output. "
"exclude: Field(s) to exclude from the JSON output. context: Additional "
"context to pass to the serializer. by_alias: Whether to serialize using "
"field aliases. exclude_unset: Whether to exclude fields that have not "
"been explicitly set. exclude_defaults: Whether to exclude fields that are"
" set to their default value. exclude_none: Whether to exclude fields that"
" have a value of `None`. round_trip: If True, dumped values should be "
"valid as input for non-idempotent types such as Json[T]. warnings: How to"
" handle serialization errors. False/\"none\" ignores them, True/\"warn\" "
"logs errors,"
msgstr ""

#: 558eded5db1b40e0b4ca9ada21232840 of
#: pydantic.main.BaseModel.model_dump_json:18
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: 3e3adeba0836429cba372349762e0c9b of
#: pydantic.main.BaseModel.model_dump_json:19
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: 6f56e07932a9497da56668ecf85e9492 of
#: pydantic.main.BaseModel.model_dump_json:20
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: beb1cac2eecb4fbd8326ee4abc51b34f of
#: pydantic.main.BaseModel.model_dump_json:21
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: fb7a373bf26840f9a65d5f0fdc20813c of
#: pydantic.main.BaseModel.model_dump_json:23
msgid "Returns:"
msgstr ""

#: e3c841cb0eb04221bba1a40cf77be6ec of
#: pydantic.main.BaseModel.model_dump_json:24
msgid "A JSON string representation of the model."
msgstr ""
