# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.scaling.VariableScaling.model_dump.rst:2
#: b06fbf1e22764ae9aefaaa97b05a79e7
msgid "VariableScaling.model\\_dump"
msgstr ""

#: fdb376c1afe2495493ef772aa4896eca of pydantic.main.BaseModel.model_dump:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 2f99259163684960b88602a140e2039b of pydantic.main.BaseModel.model_dump:3
msgid "[`model_dump`](../concepts/serialization.md#modelmodel_dump)"
msgstr ""

#: 1deb9660d708439fa2c8ca82e4500c9e of pydantic.main.BaseModel.model_dump:5
msgid ""
"Generate a dictionary representation of the model, optionally specifying "
"which fields to include or exclude."
msgstr ""

#: 3738b37e590445e28786138c771544d6 of pydantic.main.BaseModel.model_dump:7
msgid "Args:"
msgstr ""

#: d30d83e86c184750a48645eaf6e7ca28 of pydantic.main.BaseModel.model_dump:8
msgid "mode: The mode in which `to_python` should run."
msgstr ""

#: 4c11c0a3dbf9424db28969384a5ba410 of pydantic.main.BaseModel.model_dump:9
msgid ""
"If mode is 'json', the output will only contain JSON serializable types. "
"If mode is 'python', the output may contain non-JSON-serializable Python "
"objects."
msgstr ""

#: 81abf94c28754bbbb48d0d78209cc595 of pydantic.main.BaseModel.model_dump:11
msgid ""
"include: A set of fields to include in the output. exclude: A set of "
"fields to exclude from the output. context: Additional context to pass to"
" the serializer. by_alias: Whether to use the field's alias in the "
"dictionary key if defined. exclude_unset: Whether to exclude fields that "
"have not been explicitly set. exclude_defaults: Whether to exclude fields"
" that are set to their default value. exclude_none: Whether to exclude "
"fields that have a value of `None`. round_trip: If True, dumped values "
"should be valid as input for non-idempotent types such as Json[T]. "
"warnings: How to handle serialization errors. False/\"none\" ignores "
"them, True/\"warn\" logs errors,"
msgstr ""

#: 58dea778493b46c0a7443294af9d2bc7 of pydantic.main.BaseModel.model_dump:20
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: c1ab66a8de6a48a69f2e737d763a07c1 of pydantic.main.BaseModel.model_dump:21
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: 56ffc5f06c7e4d4098671c317dd70584 of pydantic.main.BaseModel.model_dump:22
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: 1196e1338dbb488b8702577fffc6038d of pydantic.main.BaseModel.model_dump:23
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: 413f389e2ae2465cb1cedd88833b03c4 of pydantic.main.BaseModel.model_dump:25
msgid "Returns:"
msgstr ""

#: 5f32f21c26474be6985576511f3075a6 of pydantic.main.BaseModel.model_dump:26
msgid "A dictionary representation of the model."
msgstr ""
