# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 11:28+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.events.EventEffect.model_dump_json.rst:2
#: adeb299781c9403eb6fc27dc060bd113
msgid "EventEffect.model\\_dump\\_json"
msgstr ""

#: a3b1e4186ceb404c8ed5b7fcec042f01 of
#: pydantic.main.BaseModel.model_dump_json:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 79690c92c1954ab9a4604916a5d15708 of
#: pydantic.main.BaseModel.model_dump_json:3
msgid "[`model_dump_json`](../concepts/serialization.md#json-mode)"
msgstr ""

#: f82dc939064f433f9a9766cade1438a6 of
#: pydantic.main.BaseModel.model_dump_json:5
msgid ""
"Generates a JSON representation of the model using Pydantic's `to_json` "
"method."
msgstr ""

#: 6a83cdd0f1f44071b403615439ca3f5d of
#: pydantic.main.BaseModel.model_dump_json:7
msgid "Args:"
msgstr ""

#: efd3595789854a8da1270b9092b2a8bd of
#: pydantic.main.BaseModel.model_dump_json:8
msgid ""
"indent: Indentation to use in the JSON output. If None is passed, the "
"output will be compact. ensure_ascii: If `True`, the output is guaranteed"
" to have all incoming non-ASCII characters escaped."
msgstr ""

#: bf6d0432a4a44d05ad1276858dd13556 of
#: pydantic.main.BaseModel.model_dump_json:10
msgid "If `False` (the default), these characters will be output as-is."
msgstr ""

#: 779a1a986aeb4b5bafe22979feb50909 of
#: pydantic.main.BaseModel.model_dump_json:11
msgid ""
"include: Field(s) to include in the JSON output. exclude: Field(s) to "
"exclude from the JSON output. context: Additional context to pass to the "
"serializer. by_alias: Whether to serialize using field aliases. "
"exclude_unset: Whether to exclude fields that have not been explicitly "
"set. exclude_defaults: Whether to exclude fields that are set to their "
"default value. exclude_none: Whether to exclude fields that have a value "
"of `None`. exclude_computed_fields: Whether to exclude computed fields."
msgstr ""

#: 406a2e575c3f4527a3592d5c49e55445 of
#: pydantic.main.BaseModel.model_dump_json:19
msgid ""
"While this can be useful for round-tripping, it is usually recommended to"
" use the dedicated `round_trip` parameter instead."
msgstr ""

#: 39a31d5c758e415b94198af927b8b49e of
#: pydantic.main.BaseModel.model_dump_json:21
msgid ""
"round_trip: If True, dumped values should be valid as input for non-"
"idempotent types such as Json[T]. warnings: How to handle serialization "
"errors. False/\"none\" ignores them, True/\"warn\" logs errors,"
msgstr ""

#: b60c157b0cd34e04abd8495f3cd3b065 of
#: pydantic.main.BaseModel.model_dump_json:23
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: 2788bd26b349416c9df0f1a7ba85740a of
#: pydantic.main.BaseModel.model_dump_json:24
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: bd6f6b941c57459084fd7493a7f98b18 of
#: pydantic.main.BaseModel.model_dump_json:25
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: 9744db12a403410882074b5fd8dee7bf of
#: pydantic.main.BaseModel.model_dump_json:26
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: 89bef38cdabe42ac8b122dc7292d23a5 of
#: pydantic.main.BaseModel.model_dump_json:28
msgid "Returns:"
msgstr ""

#: 8e8dd480260049e3a1bebdff13351a81 of
#: pydantic.main.BaseModel.model_dump_json:29
msgid "A JSON string representation of the model."
msgstr ""

#~ msgid "[`model_dump_json`](../concepts/serialization.md#modelmodel_dump_json)"
#~ msgstr ""

#~ msgid ""
#~ "indent: Indentation to use in the "
#~ "JSON output. If None is passed, "
#~ "the output will be compact. include: "
#~ "Field(s) to include in the JSON "
#~ "output. exclude: Field(s) to exclude "
#~ "from the JSON output. context: "
#~ "Additional context to pass to the "
#~ "serializer. by_alias: Whether to serialize "
#~ "using field aliases. exclude_unset: Whether"
#~ " to exclude fields that have not "
#~ "been explicitly set. exclude_defaults: Whether"
#~ " to exclude fields that are set "
#~ "to their default value. exclude_none: "
#~ "Whether to exclude fields that have "
#~ "a value of `None`. round_trip: If "
#~ "True, dumped values should be valid "
#~ "as input for non-idempotent types "
#~ "such as Json[T]. warnings: How to "
#~ "handle serialization errors. False/\"none\" "
#~ "ignores them, True/\"warn\" logs errors,"
#~ msgstr ""
