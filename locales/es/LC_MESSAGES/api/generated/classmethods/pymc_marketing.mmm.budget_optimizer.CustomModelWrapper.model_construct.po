# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-21 09:54+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: es <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.budget_optimizer.CustomModelWrapper.model_construct.rst:2
#: ebede2d0ff8948529a821a3c16dc33c3
msgid "CustomModelWrapper.model\\_construct"
msgstr ""
"{\n"
"  \"singular\": \"CustomModelWrapper.model_construct\",\n"
"  \"plural\": \"CustomModelWrapper.model_construct\"\n"
"}"

#: ba1b13ea405a420bb93eacd17edcb0f1 of
#: pydantic.main.BaseModel.model_construct:2
msgid "Creates a new instance of the `Model` class with validated data."
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"Creates a new instance of the `Model` class with validated data.\",\n"
"    \"msgstr\": \"Crea una nueva instancia de la clase `Model` con datos validados.\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"Creates a new instance of the `Model` class with validated data.\",\n"
"    \"msgstr\": \"Crea nuevas instancias de la clase `Model` con datos validados.\"\n"
"  }\n"
"}"

#: 6cb11f80e77742f5a102259f8222f638 of
#: pydantic.main.BaseModel.model_construct:4
msgid ""
"Creates a new model setting `__dict__` and `__pydantic_fields_set__` from "
"trusted or pre-validated data. Default values are respected, but no other "
"validation is performed."
msgstr ""
"{\n"
"  \"singular\": \"Crea un nuevo modelo configurando `__dict__` y `__pydantic_fields_set__` a partir de datos confiables o prevalidados. Se respetan los valores predeterminados, pero no se realiza ninguna otra validación.\",\n"
"  \"plural\": \"Crean nuevos modelos configurando `__dict__` y `__pydantic_fields_set__` a partir de datos confiables o prevalidados. Se respetan los valores predeterminados, pero no se realiza ninguna otra validación.\"\n"
"}"

#: 692de1cae4c94eeab7a763a916d920f4 of
#: pydantic.main.BaseModel.model_construct:7
msgid "!!! note"
msgstr ""
"{\n"
"  \"singular\": \"!!! nota\",\n"
"  \"plural\": \"!!! nota\"\n"
"}"

#: fa91d419779643059afbf14e335fc03c of
#: pydantic.main.BaseModel.model_construct:8
msgid ""
"`model_construct()` generally respects the `model_config.extra` setting on "
"the provided model. That is, if `model_config.extra == 'allow'`, then all "
"extra passed values are added to the model instance's `__dict__` and "
"`__pydantic_extra__` fields. If `model_config.extra == 'ignore'` (the "
"default), then all extra passed values are ignored. Because no validation is"
" performed with a call to `model_construct()`, having `model_config.extra =="
" 'forbid'` does not result in an error if extra values are passed, but they "
"will be ignored."
msgstr ""
"{\n"
"  \"singular\": \"`model_construct()` generalmente respeta la configuración `model_config.extra` en el modelo proporcionado. Es decir, si `model_config.extra == 'allow'`, entonces todos los valores extra pasados se añaden a los campos `__dict__` y `__pydantic_extra__` de la instancia del modelo. Si `model_config.extra == 'ignore'` (el valor por defecto), entonces todos los valores extra pasados son ignorados. Dado que no se realiza ninguna validación con una llamada a `model_construct()`, tener `model_config.extra == 'forbid'` no resulta en un error si se pasan valores extra, pero serán ignorados.\",\n"
"  \"plural\": \"`model_construct()` generalmente respeta la configuración `model_config.extra` en los modelos proporcionados. Es decir, si `model_config.extra == 'allow'`, entonces todos los valores extra pasados se añaden a los campos `__dict__` y `__pydantic_extra__` de las instancias del modelo. Si `model_config.extra == 'ignore'` (el valor por defecto), entonces todos los valores extra pasados son ignorados. Dado que no se realiza ninguna validación con una llamada a `model_construct()`, tener `model_config.extra == 'forbid'` no resulta en un error si se pasan valores extra, pero serán ignorados.\"\n"
"}"

#: 03e7db3d296940638ec5aafb28772ea8 of
#: pydantic.main.BaseModel.model_construct:14
msgid "Args:"
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"Args:\",\n"
"    \"msgstr\": \"Args:\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"Args:\",\n"
"    \"msgstr\": \"Args:\"\n"
"  }\n"
"}"

#: 77b81f27d4654f4bb89736cbf2c845ca of
#: pydantic.main.BaseModel.model_construct:15
msgid ""
"_fields_set: A set of field names that were originally explicitly set during"
" instantiation. If provided,"
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"_fields_set: A set of field names that were originally explicitly set during instantiation. If provided,\",\n"
"    \"msgstr\": \"_fields_set: Un conjunto de nombres de campo que fueron establecidos explícitamente durante la instanciación. Si se proporciona,\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"_fields_set: A set of field names that were originally explicitly set during instantiation. If provided,\",\n"
"    \"msgstr\": \"_fields_set: Un conjunto de nombres de campo que fueron establecidos explícitamente durante la instanciación. Si se proporciona,\"\n"
"  }\n"
"}"

#: ffa9d0db19654248bdd13dd8a950ef0e of
#: pydantic.main.BaseModel.model_construct:16
msgid ""
"this is directly used for the "
"[`model_fields_set`][pydantic.BaseModel.model_fields_set] attribute. "
"Otherwise, the field names from the `values` argument will be used."
msgstr ""
"{\n"
"  \"singular\": \"esto se utiliza directamente para el atributo [`model_fields_set`][pydantic.BaseModel.model_fields_set]. De lo contrario, se utilizarán los nombres de campo del argumento `values`.\",\n"
"  \"plural\": \"esto se utiliza directamente para el atributo [`model_fields_set`][pydantic.BaseModel.model_fields_set]. De lo contrario, se utilizarán los nombres de campo del argumento `values`.\"\n"
"}"

#: 984be69efaff4486bb554fb33b5339b6 of
#: pydantic.main.BaseModel.model_construct:18
msgid "values: Trusted or pre-validated data dictionary."
msgstr ""
"{\n"
"  \"singular\": \"valores: Diccionario de datos confiables o prevalidado.\",\n"
"  \"plural\": \"valores: Diccionarios de datos confiables o prevalidados.\"\n"
"}"

#: 124bd49537c74458ac39b3338b8ba3bd of
#: pydantic.main.BaseModel.model_construct:20
msgid "Returns:"
msgstr ""
"{\n"
"  \"singular\": {\n"
"    \"msgid\": \"Returns:\",\n"
"    \"msgstr\": \"Devoluciones:\"\n"
"  },\n"
"  \"plural\": {\n"
"    \"msgid\": \"Returns:\",\n"
"    \"msgstr\": \"Devoluciones:\"\n"
"  }\n"
"}"

#: 2a042f0542144a9586487242d33e5dee of
#: pydantic.main.BaseModel.model_construct:21
msgid "A new instance of the `Model` class with validated data."
msgstr ""
"{\n"
"  \"singular\": \"Una nueva instancia de la clase `Model` con datos validados.\",\n"
"  \"plural\": \"Nuevas instancias de la clase `Model` con datos validados.\"\n"
"}"
