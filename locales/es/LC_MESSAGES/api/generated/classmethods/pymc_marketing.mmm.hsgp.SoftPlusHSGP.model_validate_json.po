# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 11:28+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: es <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.hsgp.SoftPlusHSGP.model_validate_json.rst:2
#: 4742984c4be64ad0b0697f2ed0e02fd9
msgid "SoftPlusHSGP.model\\_validate\\_json"
msgstr "SoftPlusHSGP.model\\_validate\\_json"

#: 26a10211b72b49ba98ed6449fe21aa30 of
#: pydantic.main.BaseModel.model_validate_json:2
msgid "!!! abstract \"Usage Documentation\""
msgstr "!!! abstract \"Documentación de Uso\""

#: ce36db09d7554daa8a3d64aa2b564d09 of
#: pydantic.main.BaseModel.model_validate_json:3
msgid "[JSON Parsing](../concepts/json.md#json-parsing)"
msgstr "[Análisis de JSON](../concepts/json.md#json-parsing)"

#: 05a3b3b4b1cf4b9aa6c36c794f3ee3b9 of
#: pydantic.main.BaseModel.model_validate_json:5
msgid "Validate the given JSON data against the Pydantic model."
msgstr "Valide los datos JSON proporcionados contra el modelo de Pydantic."

#: 7bb4446da1e348e9987d2bec99b3d70f of
#: pydantic.main.BaseModel.model_validate_json:7
msgid "Args:"
msgstr "Args:"

#: 4d7faa2592ea4a9eb91b849ae38f7a8c of
#: pydantic.main.BaseModel.model_validate_json:8
msgid ""
"json_data: The JSON data to validate. strict: Whether to enforce types "
"strictly. extra: Whether to ignore, allow, or forbid extra data during model"
" validation."
msgstr ""
"json_data: Los datos JSON a validar. strict: Si se deben imponer los tipos "
"de manera estricta. extra: Si se debe ignorar, permitir o prohibir datos "
"adicionales durante la validación del modelo."

#: dcaf1a38e1cc45bfb08fbed2dec1d95d of
#: pydantic.main.BaseModel.model_validate_json:11
msgid ""
"See the [`extra` configuration value][pydantic.ConfigDict.extra] for "
"details."
msgstr ""
"Vea el valor de configuración [`extra`][pydantic.ConfigDict.extra] para más "
"detalles."

#: f1438a6eea6645368a535afd9c345d0c of
#: pydantic.main.BaseModel.model_validate_json:12
msgid ""
"context: Extra variables to pass to the validator. by_alias: Whether to use "
"the field's alias when validating against the provided input data. by_name: "
"Whether to use the field's name when validating against the provided input "
"data."
msgstr ""
"context: Variables adicionales para pasar al validador. by_alias: Si se debe"
" utilizar el alias del campo al validar contra los datos de entrada "
"proporcionados. by_name: Si se debe utilizar el nombre del campo al validar "
"contra los datos de entrada proporcionados."

#: cf242b6fc1b8406bbcb2261c0345b665 of
#: pydantic.main.BaseModel.model_validate_json:16
msgid "Returns:"
msgstr "Devoluciones:"

#: b0557b1789a745cba18581c1717538b0 of
#: pydantic.main.BaseModel.model_validate_json:17
msgid "The validated Pydantic model."
msgstr "El modelo Pydantic validado."

#: b72d8965504b4d3482b432fc80c3abe5 of
#: pydantic.main.BaseModel.model_validate_json:19
msgid "Raises:"
msgstr "Aumentos:"

#: 1c6934a417fe46609995aac4ad7596b8 of
#: pydantic.main.BaseModel.model_validate_json:20
msgid ""
"ValidationError: If `json_data` is not a JSON string or the object could not"
" be validated."
msgstr ""
"ValidationError: Si `json_data` no es una cadena JSON o el objeto no pudo "
"ser validado."

#~ msgid ""
#~ "json_data: The JSON data to validate. strict: Whether to enforce types "
#~ "strictly. context: Extra variables to pass to the validator. by_alias: "
#~ "Whether to use the field's alias when validating against the provided input "
#~ "data. by_name: Whether to use the field's name when validating against the "
#~ "provided input data."
#~ msgstr ""
#~ "json_data: Los datos JSON a validar. strict: Si se deben aplicar "
#~ "estrictamente los tipos. context: Variables adicionales para pasar al "
#~ "validador. by_alias: Si se debe utilizar el alias del campo al validar "
#~ "contra los datos de entrada proporcionados. by_name: Si se debe utilizar el "
#~ "nombre del campo al validar contra los datos de entrada proporcionados."
