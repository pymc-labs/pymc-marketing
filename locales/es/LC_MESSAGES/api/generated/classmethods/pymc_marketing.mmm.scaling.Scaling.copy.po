# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: es <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.scaling.Scaling.copy.rst:2
#: 84230b2afb594aa9b3d1ba812459e86e
msgid "Scaling.copy"
msgstr "Escalando.copiar"

#: 0bf5a75e167d4e93ad8a639f5e4c3b72 of pydantic.main.BaseModel.copy:2
msgid "Returns a copy of the model."
msgstr "Devuelve una copia del modelo."

#: b47f22e3806e4345b75fbf4985058240 of pydantic.main.BaseModel.copy:4
msgid "!!! warning \"Deprecated\""
msgstr "!!! advertencia \"Obsoleto\""

#: 894e2aa3359a4e3599daa3c7d93c0d17 of pydantic.main.BaseModel.copy:5
msgid "This method is now deprecated; use `model_copy` instead."
msgstr "Este método está ahora obsoleto; utilice `model_copy` en su lugar."

#: e08abcbc5e334ddf95518d6416995618 of pydantic.main.BaseModel.copy:7
msgid "If you need `include` or `exclude`, use:"
msgstr "Si necesita `include` o `exclude`, utilice:"

#: 47975db204eb426a90039a50b00dad1a of pydantic.main.BaseModel.copy:9
msgid ""
"```python {test=\"skip\" lint=\"skip\"} data = "
"self.model_dump(include=include, exclude=exclude, round_trip=True) data = "
"{**data, **(update or {})} copied = self.model_validate(data) ```"
msgstr ""
"msgid: ```python {test=\"skip\" lint=\"skip\"} data = self.model_dump(include=include, exclude=exclude, round_trip=True) data = {**data, **(update or {})} copied = self.model_validate(data) ```\n"
"msgstr: ```python {test=\"skip\" lint=\"skip\"} data = self.model_dump(include=include, exclude=exclude, round_trip=True) data = {**data, **(update or {})} copied = self.model_validate(data) ```"

#: d50df12795804c3389e3abb83e1f3d28 of pydantic.main.BaseModel.copy:15
msgid "Args:"
msgstr "Args:"

#: 6d93c4767fd7419ab42f6f81c8367211 of pydantic.main.BaseModel.copy:16
msgid ""
"include: Optional set or mapping specifying which fields to include in the "
"copied model. exclude: Optional set or mapping specifying which fields to "
"exclude in the copied model. update: Optional dictionary of field-value "
"pairs to override field values in the copied model. deep: If True, the "
"values of fields that are Pydantic models will be deep-copied."
msgstr ""
"include: Conjunto o mapeo opcional que especifica qué campos incluir en el "
"modelo copiado. exclude: Conjunto o mapeo opcional que especifica qué campos"
" excluir en el modelo copiado. update: Diccionario opcional de pares campo-"
"valor para sobrescribir los valores de los campos en el modelo copiado. "
"deep: Si es True, los valores de los campos que son modelos Pydantic se "
"copiarán en profundidad."

#: 01dc6c4cab43474abc711cb78dfdfccb of pydantic.main.BaseModel.copy:21
msgid "Returns:"
msgstr "Devoluciones:"

#: 39234756eaff4e7d8f53bdb88baf68bb of pydantic.main.BaseModel.copy:22
msgid ""
"A copy of the model with included, excluded and updated fields as specified."
msgstr ""
"Una copia del modelo con los campos incluidos, excluidos y actualizados "
"según lo especificado."
