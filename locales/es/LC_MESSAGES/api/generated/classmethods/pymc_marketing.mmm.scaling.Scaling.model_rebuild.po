# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.scaling.Scaling.model_rebuild.rst:2
#: 84ea299b1c45405c963e200c0c1f7bd3
msgid "Scaling.model\\_rebuild"
msgstr ""

#: cdc420d41a1c42ebae9b984a948af1aa of pydantic.main.BaseModel.model_rebuild:2
msgid "Try to rebuild the pydantic-core schema for the model."
msgstr ""

#: 6cf2b56fb52048c9846a3dd7d5c91b36 of pydantic.main.BaseModel.model_rebuild:4
msgid ""
"This may be necessary when one of the annotations is a ForwardRef which "
"could not be resolved during the initial attempt to build the schema, and"
" automatic rebuilding fails."
msgstr ""

#: e748fcdda56c48d2838d843d06edec13 of pydantic.main.BaseModel.model_rebuild:7
msgid "Args:"
msgstr ""

#: 3a8fac3a9efb41a3bc298eef95136af3 of pydantic.main.BaseModel.model_rebuild:8
msgid ""
"force: Whether to force the rebuilding of the model schema, defaults to "
"`False`. raise_errors: Whether to raise errors, defaults to `True`. "
"_parent_namespace_depth: The depth level of the parent namespace, "
"defaults to 2. _types_namespace: The types namespace, defaults to `None`."
msgstr ""

#: 6685e39843d845afa01975928f8d780e of pydantic.main.BaseModel.model_rebuild:13
msgid "Returns:"
msgstr ""

#: 8d491d325a964e94a876792decd60d3d of pydantic.main.BaseModel.model_rebuild:14
msgid ""
"Returns `None` if the schema is already \"complete\" and rebuilding was "
"not required. If rebuilding _was_ required, returns `True` if rebuilding "
"was successful, otherwise `False`."
msgstr ""
