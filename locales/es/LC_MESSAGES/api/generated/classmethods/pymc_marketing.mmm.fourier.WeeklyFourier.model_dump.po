# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.fourier.WeeklyFourier.model_dump.rst:2
#: 80ae9f41df7b4937af90ac1c6ded886c
msgid "WeeklyFourier.model\\_dump"
msgstr ""

#: 0ffd3a0a805e4999a836e1700c40f822 of pydantic.main.BaseModel.model_dump:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 81e00de855ec455c871b6538816d9b6e of pydantic.main.BaseModel.model_dump:3
msgid "[`model_dump`](../concepts/serialization.md#modelmodel_dump)"
msgstr ""

#: 0762bfb670834dadbd48e6e88ce1f7b9 of pydantic.main.BaseModel.model_dump:5
msgid ""
"Generate a dictionary representation of the model, optionally specifying "
"which fields to include or exclude."
msgstr ""

#: 741feb792bcf41dba75fc39ad793f6d7 of pydantic.main.BaseModel.model_dump:7
msgid "Args:"
msgstr ""

#: 0970caf613dd45b3a231d5de99f02b44 of pydantic.main.BaseModel.model_dump:8
msgid "mode: The mode in which `to_python` should run."
msgstr ""

#: 20aef14a908741f08a3691a2352e906e of pydantic.main.BaseModel.model_dump:9
msgid ""
"If mode is 'json', the output will only contain JSON serializable types. "
"If mode is 'python', the output may contain non-JSON-serializable Python "
"objects."
msgstr ""

#: fe1a80224da446e9bae81c8aebe0ab82 of pydantic.main.BaseModel.model_dump:11
msgid ""
"include: A set of fields to include in the output. exclude: A set of "
"fields to exclude from the output. context: Additional context to pass to"
" the serializer. by_alias: Whether to use the field's alias in the "
"dictionary key if defined. exclude_unset: Whether to exclude fields that "
"have not been explicitly set. exclude_defaults: Whether to exclude fields"
" that are set to their default value. exclude_none: Whether to exclude "
"fields that have a value of `None`. round_trip: If True, dumped values "
"should be valid as input for non-idempotent types such as Json[T]. "
"warnings: How to handle serialization errors. False/\"none\" ignores "
"them, True/\"warn\" logs errors,"
msgstr ""

#: d50fe2e493794e71aabaf335abb08ce9 of pydantic.main.BaseModel.model_dump:20
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: 853ac8db8d774acb94874d29efd59c9f of pydantic.main.BaseModel.model_dump:21
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: 01bcc95b27a040b58db9d40ad45fafef of pydantic.main.BaseModel.model_dump:22
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: 35573078a68c446b8cd00596dd0040c3 of pydantic.main.BaseModel.model_dump:23
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: 06b1f9ab9ee44844940b44d66233b26b of pydantic.main.BaseModel.model_dump:25
msgid "Returns:"
msgstr ""

#: 32cb90e6b9e047e581411f63a6e1901f of pydantic.main.BaseModel.model_dump:26
msgid "A dictionary representation of the model."
msgstr ""
