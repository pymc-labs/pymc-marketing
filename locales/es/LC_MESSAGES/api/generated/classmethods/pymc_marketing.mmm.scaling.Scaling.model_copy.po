# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.scaling.Scaling.model_copy.rst:2
#: 1ce9b21041fe415c845af46f3eeabe24
msgid "Scaling.model\\_copy"
msgstr ""

#: 462b99ed95c1404dbf9fc55ab8a27760 of pydantic.main.BaseModel.model_copy:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: cd10b203694943d9a4d593e94a5caf69 of pydantic.main.BaseModel.model_copy:3
msgid "[`model_copy`](../concepts/serialization.md#model_copy)"
msgstr ""

#: 736f25a269984aae9ed0d7524fabf43c of pydantic.main.BaseModel.model_copy:5
msgid "Returns a copy of the model."
msgstr ""

#: c418f4619515430baf2106db13131006 of pydantic.main.BaseModel.model_copy:7
msgid "!!! note"
msgstr ""

#: e8e0c067b2954f58bdc0e66ea72b29eb of pydantic.main.BaseModel.model_copy:8
msgid ""
"The underlying instance's [`__dict__`][object.__dict__] attribute is "
"copied. This might have unexpected side effects if you store anything in "
"it, on top of the model fields (e.g. the value of [cached "
"properties][functools.cached_property])."
msgstr ""

#: 3afa6c1b760f4b158461c3f83d522280 of pydantic.main.BaseModel.model_copy:12
msgid "Args:"
msgstr ""

#: 76be6d1c14c54396ae1b20fe35fad487 of pydantic.main.BaseModel.model_copy:13
msgid ""
"update: Values to change/add in the new model. Note: the data is not "
"validated"
msgstr ""

#: e7640acc735546c3afb795cacaddf194 of pydantic.main.BaseModel.model_copy:14
msgid "before creating the new model. You should trust this data."
msgstr ""

#: 955b48fb62d04d4e93cd47db77ea8c7d of pydantic.main.BaseModel.model_copy:15
msgid "deep: Set to `True` to make a deep copy of the model."
msgstr ""

#: e7a8e73025714cf4a92b9f5eb657a4a5 of pydantic.main.BaseModel.model_copy:17
msgid "Returns:"
msgstr ""

#: 3fd126cf265d4c4d8891e8edc69000ac of pydantic.main.BaseModel.model_copy:18
msgid "New model instance."
msgstr ""
