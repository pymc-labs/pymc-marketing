# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.budget_optimizer.BudgetOptimizer.model_copy.rst:2
#: 8988e27e06294f1bb5e7fe5ef1299862
msgid "BudgetOptimizer.model\\_copy"
msgstr ""

#: 59d8f57aff2b4acd858d5914921717eb of pydantic.main.BaseModel.model_copy:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: bed488c8cded4322b12c1b7a5779c481 of pydantic.main.BaseModel.model_copy:3
msgid "[`model_copy`](../concepts/serialization.md#model_copy)"
msgstr ""

#: 637f77eeb1ac4715a01774c17b9f2e89 of pydantic.main.BaseModel.model_copy:5
msgid "Returns a copy of the model."
msgstr ""

#: 1bd6e5df53ef4068a01e0f67342f44b1 of pydantic.main.BaseModel.model_copy:7
msgid "!!! note"
msgstr ""

#: 7ec1dae46ffd43bd9598ba4142d1005c of pydantic.main.BaseModel.model_copy:8
msgid ""
"The underlying instance's [`__dict__`][object.__dict__] attribute is "
"copied. This might have unexpected side effects if you store anything in "
"it, on top of the model fields (e.g. the value of [cached "
"properties][functools.cached_property])."
msgstr ""

#: e516cc337b9548a68f07ccdaf07e6c99 of pydantic.main.BaseModel.model_copy:12
msgid "Args:"
msgstr ""

#: 26ba51bd2dee48fc99ba9488cae24652 of pydantic.main.BaseModel.model_copy:13
msgid ""
"update: Values to change/add in the new model. Note: the data is not "
"validated"
msgstr ""

#: 59dbe0a19c3e477a89fc23b0ff4281fb of pydantic.main.BaseModel.model_copy:14
msgid "before creating the new model. You should trust this data."
msgstr ""

#: 8999a0a1b1644ce28533af03eec1e6d6 of pydantic.main.BaseModel.model_copy:15
msgid "deep: Set to `True` to make a deep copy of the model."
msgstr ""

#: 7cda3189ea834ce39823105559f6387b of pydantic.main.BaseModel.model_copy:17
msgid "Returns:"
msgstr ""

#: 1e2989300f1f4c9faa5eddd4048462de of pydantic.main.BaseModel.model_copy:18
msgid "New model instance."
msgstr ""
