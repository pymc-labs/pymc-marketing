# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.hsgp.HSGPPeriodic.model_dump_json.rst:2
#: a2cd745c1ce246f7999cc4052e34d6ad
msgid "HSGPPeriodic.model\\_dump\\_json"
msgstr ""

#: 83115d831ffe4b528f2f9c916b6fdc9f of
#: pydantic.main.BaseModel.model_dump_json:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 7f37e6a140484226b12f23d28ee4e8b5 of
#: pydantic.main.BaseModel.model_dump_json:3
msgid "[`model_dump_json`](../concepts/serialization.md#modelmodel_dump_json)"
msgstr ""

#: 7b0422e253814cd3bdb1eb37a53694d7 of
#: pydantic.main.BaseModel.model_dump_json:5
msgid ""
"Generates a JSON representation of the model using Pydantic's `to_json` "
"method."
msgstr ""

#: e77deecf89de41f18d70fdb09b4903e7 of
#: pydantic.main.BaseModel.model_dump_json:7
msgid "Args:"
msgstr ""

#: ad345bc1e6a44e34ac04b9873d823463 of
#: pydantic.main.BaseModel.model_dump_json:8
msgid ""
"indent: Indentation to use in the JSON output. If None is passed, the "
"output will be compact. include: Field(s) to include in the JSON output. "
"exclude: Field(s) to exclude from the JSON output. context: Additional "
"context to pass to the serializer. by_alias: Whether to serialize using "
"field aliases. exclude_unset: Whether to exclude fields that have not "
"been explicitly set. exclude_defaults: Whether to exclude fields that are"
" set to their default value. exclude_none: Whether to exclude fields that"
" have a value of `None`. round_trip: If True, dumped values should be "
"valid as input for non-idempotent types such as Json[T]. warnings: How to"
" handle serialization errors. False/\"none\" ignores them, True/\"warn\" "
"logs errors,"
msgstr ""

#: cc0a8542b98c462ba5baa7139ee414b8 of
#: pydantic.main.BaseModel.model_dump_json:18
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: e082775661274ea3a942013095c96052 of
#: pydantic.main.BaseModel.model_dump_json:19
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: ccfb234c70f8406f87918ff7813712af of
#: pydantic.main.BaseModel.model_dump_json:20
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: 2fa44bf924de45a8bdd5763f1e5bc225 of
#: pydantic.main.BaseModel.model_dump_json:21
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: 3782af5ca1ec47078f7e60b116e6734b of
#: pydantic.main.BaseModel.model_dump_json:23
msgid "Returns:"
msgstr ""

#: c8e198d8d8a04011823624c4b6cdff9b of
#: pydantic.main.BaseModel.model_dump_json:24
msgid "A JSON string representation of the model."
msgstr ""
