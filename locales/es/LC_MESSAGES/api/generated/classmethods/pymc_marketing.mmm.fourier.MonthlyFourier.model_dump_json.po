# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2025, PyMC Labs
# This file is distributed under the same license as the pymc-marketing
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pymc-marketing local\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 11:28+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../source/api/generated/classmethods/pymc_marketing.mmm.fourier.MonthlyFourier.model_dump_json.rst:2
#: 7510418d1e4d44f090cab965d5ed9acb
msgid "MonthlyFourier.model\\_dump\\_json"
msgstr ""

#: d2018aa90402410e8e5dfc75a950b46a of
#: pydantic.main.BaseModel.model_dump_json:2
msgid "!!! abstract \"Usage Documentation\""
msgstr ""

#: 016fea27050444e29cb25d41fcd939d0 of
#: pydantic.main.BaseModel.model_dump_json:3
msgid "[`model_dump_json`](../concepts/serialization.md#json-mode)"
msgstr ""

#: d9267bad64394463b976a4070b1511cd of
#: pydantic.main.BaseModel.model_dump_json:5
msgid ""
"Generates a JSON representation of the model using Pydantic's `to_json` "
"method."
msgstr ""

#: 87794f6e0d1842e2a86b9f7dcb0c97dd of
#: pydantic.main.BaseModel.model_dump_json:7
msgid "Args:"
msgstr ""

#: 20bc1371a946402eb25a5816f58eab61 of
#: pydantic.main.BaseModel.model_dump_json:8
msgid ""
"indent: Indentation to use in the JSON output. If None is passed, the "
"output will be compact. ensure_ascii: If `True`, the output is guaranteed"
" to have all incoming non-ASCII characters escaped."
msgstr ""

#: 8c340d47c7074c47a15c36cb98c11b34 of
#: pydantic.main.BaseModel.model_dump_json:10
msgid "If `False` (the default), these characters will be output as-is."
msgstr ""

#: fb584f262ef548a0a5c7ffd1a1480bad of
#: pydantic.main.BaseModel.model_dump_json:11
msgid ""
"include: Field(s) to include in the JSON output. exclude: Field(s) to "
"exclude from the JSON output. context: Additional context to pass to the "
"serializer. by_alias: Whether to serialize using field aliases. "
"exclude_unset: Whether to exclude fields that have not been explicitly "
"set. exclude_defaults: Whether to exclude fields that are set to their "
"default value. exclude_none: Whether to exclude fields that have a value "
"of `None`. exclude_computed_fields: Whether to exclude computed fields."
msgstr ""

#: ff8faf553e1a44419148dba1a57b179a of
#: pydantic.main.BaseModel.model_dump_json:19
msgid ""
"While this can be useful for round-tripping, it is usually recommended to"
" use the dedicated `round_trip` parameter instead."
msgstr ""

#: 0b33e82ecc2e4becae583654daae8559 of
#: pydantic.main.BaseModel.model_dump_json:21
msgid ""
"round_trip: If True, dumped values should be valid as input for non-"
"idempotent types such as Json[T]. warnings: How to handle serialization "
"errors. False/\"none\" ignores them, True/\"warn\" logs errors,"
msgstr ""

#: d914bb4fa5e746159b3388739b5b7fa4 of
#: pydantic.main.BaseModel.model_dump_json:23
msgid ""
"\"error\" raises a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError]."
msgstr ""

#: 935e5c01368a47ab878753fe9a3688d1 of
#: pydantic.main.BaseModel.model_dump_json:24
msgid ""
"fallback: A function to call when an unknown value is encountered. If not"
" provided,"
msgstr ""

#: af5a13f298ad49bf943fc9eb26957263 of
#: pydantic.main.BaseModel.model_dump_json:25
msgid ""
"a "
"[`PydanticSerializationError`][pydantic_core.PydanticSerializationError] "
"error is raised."
msgstr ""

#: c0396182cc164127b908040953b32ad5 of
#: pydantic.main.BaseModel.model_dump_json:26
msgid ""
"serialize_as_any: Whether to serialize fields with duck-typing "
"serialization behavior."
msgstr ""

#: a8cab85e072a41bca071938bdbca8aa4 of
#: pydantic.main.BaseModel.model_dump_json:28
msgid "Returns:"
msgstr ""

#: 886cc359cb5e4b1bbd90e2b25b367185 of
#: pydantic.main.BaseModel.model_dump_json:29
msgid "A JSON string representation of the model."
msgstr ""

#~ msgid "[`model_dump_json`](../concepts/serialization.md#modelmodel_dump_json)"
#~ msgstr ""

#~ msgid ""
#~ "indent: Indentation to use in the "
#~ "JSON output. If None is passed, "
#~ "the output will be compact. include: "
#~ "Field(s) to include in the JSON "
#~ "output. exclude: Field(s) to exclude "
#~ "from the JSON output. context: "
#~ "Additional context to pass to the "
#~ "serializer. by_alias: Whether to serialize "
#~ "using field aliases. exclude_unset: Whether"
#~ " to exclude fields that have not "
#~ "been explicitly set. exclude_defaults: Whether"
#~ " to exclude fields that are set "
#~ "to their default value. exclude_none: "
#~ "Whether to exclude fields that have "
#~ "a value of `None`. round_trip: If "
#~ "True, dumped values should be valid "
#~ "as input for non-idempotent types "
#~ "such as Json[T]. warnings: How to "
#~ "handle serialization errors. False/\"none\" "
#~ "ignores them, True/\"warn\" logs errors,"
#~ msgstr ""
